apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "manager.fullname" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    app: {{ template "manager.fullname" . }}
    chart: {{ template "manager.fullname" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ template "manager.name" . }}
      release: {{ .Release.Name }}
  template:
    metadata:
    {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      labels:
        logType: "scala"
        app: {{ template "manager.name" . }}
        release: {{ .Release.Name }}
        logging: "true"
    spec:
{{- if .Values.global.tolerations }}  
      tolerations:
{{ toYaml .Values.global.tolerations | indent 8 }}
{{- end }}
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
      {{- if .Values.monitoring.enabled }}
        - name: jmx-exporter
          image: bitnami/jmx-exporter:latest
          ports:
            - name: jmx-exporter
              containerPort: 5556
              protocol: TCP
      {{- end }}
      {{- if .Values.exportMetrics.enabled }}
        - name: otel-collector
          image: otel/opentelemetry-collector-contrib:0.42.0
          args:
            - "--config=/etc/otel/otel-collector-config.yaml"
          ports:
            - name: pprof
              containerPort: {{ .Values.exportMetrics.ports.pprof }}
              protocol: TCP
            - name: metrics
              containerPort: {{ .Values.exportMetrics.ports.metrics }}
              protocol: TCP
            - name: export-metrics
              protocol: TCP
              containerPort: {{ .Values.exportMetrics.ports.exporterMetrics }}
            - name: health-check
              protocol: TCP
              containerPort: {{ .Values.exportMetrics.ports.healthCheck }}
            - name: otel-grpc
              protocol: TCP
              containerPort: {{ .Values.exportMetrics.ports.grpc }}
            - name: zpages
              protocol: TCP
              containerPort: {{ .Values.exportMetrics.ports.zpages }}
          env:
            - name: PROMETHEUS_ENDPOINT
              value: http://{{ .Values.exportMetrics.prometheusEndpoint }}/api/v1/write
          volumeMounts:
            - name: varlogpods
              mountPath: /var/log/pods
              readOnly: true
            - name: varlibdockercontainers
              mountPath: /var/lib/docker/containers
              readOnly: true
            - name: {{ template "manager.fullname" . }}-otel-config
              mountPath: "/etc/otel/"
              readOnly: true
          resources:
            limits:
              cpu: 100m
              memory: 200Mi
            requests:
              cpu: 100m
              memory: 200Mi
        {{- end }}
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.full }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          args:
            - "-Dconfig.file=/etc/manager/k8s.conf"
            - "-Dcom.sun.management.jmxremote.port=5555"
            - "-Dcom.sun.management.jmxremote.rmi.port=5555"
            - "-Djava.rmi.server.hostname=localhost"
            - "-Dcom.sun.management.jmxremote.authenticate=false"
            - "-Dcom.sun.management.jmxremote.ssl=false"
          ports:
            - name: http
              containerPort: {{ .Values.containerPorts.http }}
              protocol: TCP
            - name: grpc
              containerPort: {{ .Values.containerPorts.grpc }}
              protocol: TCP
            - name: jmx
              protocol: TCP
              containerPort: {{ .Values.containerPorts.jmx }}
          env:
            - name: AWS_REGION
              value: "us-west-1"
            - name: EXTERNAL_URL
              value: {{ if .Values.global.ui.ingress.enabled }}'https://{{ .Values.global.ui.ingress.host }}:443{{ trimSuffix "/" .Values.global.ui.ingress.path }}'{{else}}'http://localhost:8080'{{end}}
            - name: HTTP_PORT
              value: "{{ .Values.containerPorts.http }}"
            - name: GRPC_PORT
              value: "{{ .Values.global.manager.service.ports.grpc }}"
            - name: MINIO_HOST
              value: "http://{{ template "minio.fullname" . }}:{{ .Values.global.persistence.service.ports.api }}"
            - name: MINIO_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ template "minio.fullname" . }}
                  key: root-user
            - name: MINIO_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ template "minio.fullname" . }}
                  key: root-password
            - name: DATABASE_HOST
              value: {{ if .Values.global.postgresql.url }}"{{ .Values.global.postgresql.url }}"{{ else }}"{{ template "postgresql.fullname" . }}" {{ end }}
            - name: DATABASE_NAME
              value: "{{ .Values.global.postgresql.postgresqlDatabase }}"
            - name: DATABASE_USERNAME
              value: "{{ .Values.global.postgresql.postgresqlUsername }}"
            - name: DATABASE_PORT
              value: "{{ .Values.global.postgresql.servicePort }}"
            - name: DATABASE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ template "postgresql.fullname" . }}
                  key: postgresql-password
            - name: OTEL_COLLECTOR_URL
              value: "localhost:4317"
          readinessProbe:
            exec:
              command:
              - "grpc_health_probe"
              - "-addr"
              - ":{{ .Values.containerPorts.grpc }}"
            initialDelaySeconds: 10
          livenessProbe:
            exec:
              command:
              - "grpc_health_probe"
              - "-addr"
              - ":{{ .Values.containerPorts.grpc }}"
            initialDelaySeconds: 20
          volumeMounts:
            - name: {{ template "manager.fullname" . }}-config
              mountPath: "/etc/manager/"
              readOnly: true
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
        - name: varlogpods
          hostPath:
            path: /var/log/pods
        - name: varlibdockercontainers
          hostPath:
            path: /var/lib/docker/containers
        - name: {{ template "manager.fullname" . }}-otel-config
          configMap:
            name: {{ template "manager.fullname" . }}-otel-config
            items:
              - key: otel-collector-config.yaml
                path: otel-collector-config.yaml
        - name: {{ template "manager.fullname" . }}-config
          configMap:
            name: {{ template "manager.fullname" . }}-config
            items:
              - key: k8s.conf
                path: k8s.conf
